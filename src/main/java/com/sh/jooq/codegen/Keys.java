/*
 * This file is generated by jOOQ.
 */
package com.sh.jooq.codegen;


import com.sh.jooq.codegen.tables.Authorities;
import com.sh.jooq.codegen.tables.PersistentLogins;
import com.sh.jooq.codegen.tables.TMenu;
import com.sh.jooq.codegen.tables.TRole;
import com.sh.jooq.codegen.tables.TRoleMenu;
import com.sh.jooq.codegen.tables.TUser;
import com.sh.jooq.codegen.tables.TUserRoles;
import com.sh.jooq.codegen.tables.Users;
import com.sh.jooq.codegen.tables.records.AuthoritiesRecord;
import com.sh.jooq.codegen.tables.records.PersistentLoginsRecord;
import com.sh.jooq.codegen.tables.records.TMenuRecord;
import com.sh.jooq.codegen.tables.records.TRoleMenuRecord;
import com.sh.jooq.codegen.tables.records.TRoleRecord;
import com.sh.jooq.codegen.tables.records.TUserRecord;
import com.sh.jooq.codegen.tables.records.TUserRolesRecord;
import com.sh.jooq.codegen.tables.records.UsersRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * security.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AuthoritiesRecord> KEY_AUTHORITIES_IX_AUTH_USERNAME = Internal.createUniqueKey(Authorities.AUTHORITIES, DSL.name("KEY_authorities_ix_auth_username"), new TableField[] { Authorities.AUTHORITIES.USERNAME, Authorities.AUTHORITIES.AUTHORITY }, true);
    public static final UniqueKey<PersistentLoginsRecord> KEY_PERSISTENT_LOGINS_PRIMARY = Internal.createUniqueKey(PersistentLogins.PERSISTENT_LOGINS, DSL.name("KEY_persistent_logins_PRIMARY"), new TableField[] { PersistentLogins.PERSISTENT_LOGINS.SERIES }, true);
    public static final UniqueKey<TMenuRecord> KEY_T_MENU_PRIMARY = Internal.createUniqueKey(TMenu.T_MENU, DSL.name("KEY_t_menu_PRIMARY"), new TableField[] { TMenu.T_MENU.ID }, true);
    public static final UniqueKey<TRoleRecord> KEY_T_ROLE_PRIMARY = Internal.createUniqueKey(TRole.T_ROLE, DSL.name("KEY_t_role_PRIMARY"), new TableField[] { TRole.T_ROLE.ID }, true);
    public static final UniqueKey<TRoleMenuRecord> KEY_T_ROLE_MENU_PRIMARY = Internal.createUniqueKey(TRoleMenu.T_ROLE_MENU, DSL.name("KEY_t_role_menu_PRIMARY"), new TableField[] { TRoleMenu.T_ROLE_MENU.ID }, true);
    public static final UniqueKey<TUserRecord> KEY_T_USER_PRIMARY = Internal.createUniqueKey(TUser.T_USER, DSL.name("KEY_t_user_PRIMARY"), new TableField[] { TUser.T_USER.ID }, true);
    public static final UniqueKey<TUserRecord> KEY_T_USER_T_USER_UN = Internal.createUniqueKey(TUser.T_USER, DSL.name("KEY_t_user_t_user_un"), new TableField[] { TUser.T_USER.USERNAME }, true);
    public static final UniqueKey<UsersRecord> KEY_USERS_PRIMARY = Internal.createUniqueKey(Users.USERS, DSL.name("KEY_users_PRIMARY"), new TableField[] { Users.USERS.USERNAME }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AuthoritiesRecord, UsersRecord> FK_AUTHORITIES_USERS = Internal.createForeignKey(Authorities.AUTHORITIES, DSL.name("fk_authorities_users"), new TableField[] { Authorities.AUTHORITIES.USERNAME }, Keys.KEY_USERS_PRIMARY, new TableField[] { Users.USERS.USERNAME }, true);
    public static final ForeignKey<TUserRolesRecord, TUserRecord> FK7L00C7JB4804XLPMK1K26TEXY = Internal.createForeignKey(TUserRoles.T_USER_ROLES, DSL.name("FK7l00c7jb4804xlpmk1k26texy"), new TableField[] { TUserRoles.T_USER_ROLES.T_USER_ID }, Keys.KEY_T_USER_PRIMARY, new TableField[] { TUser.T_USER.ID }, true);
    public static final ForeignKey<TUserRolesRecord, TRoleRecord> FKJ47YP3HHTSOAJHT9793TBDRP4 = Internal.createForeignKey(TUserRoles.T_USER_ROLES, DSL.name("FKj47yp3hhtsoajht9793tbdrp4"), new TableField[] { TUserRoles.T_USER_ROLES.ROLES_ID }, Keys.KEY_T_ROLE_PRIMARY, new TableField[] { TRole.T_ROLE.ID }, true);
}
