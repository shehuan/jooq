/*
 * This file is generated by jOOQ.
 */
package com.sh.jooq.codegen.tables;


import com.sh.jooq.codegen.Keys;
import com.sh.jooq.codegen.Security;
import com.sh.jooq.codegen.tables.records.TRoleMenuRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TRoleMenu extends TableImpl<TRoleMenuRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>security.t_role_menu</code>
     */
    public static final TRoleMenu T_ROLE_MENU = new TRoleMenu();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TRoleMenuRecord> getRecordType() {
        return TRoleMenuRecord.class;
    }

    /**
     * The column <code>security.t_role_menu.id</code>.
     */
    public final TableField<TRoleMenuRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>security.t_role_menu.role_id</code>.
     */
    public final TableField<TRoleMenuRecord, Long> ROLE_ID = createField(DSL.name("role_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>security.t_role_menu.menu_id</code>.
     */
    public final TableField<TRoleMenuRecord, Long> MENU_ID = createField(DSL.name("menu_id"), SQLDataType.BIGINT.nullable(false), this, "");

    private TRoleMenu(Name alias, Table<TRoleMenuRecord> aliased) {
        this(alias, aliased, null);
    }

    private TRoleMenu(Name alias, Table<TRoleMenuRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>security.t_role_menu</code> table reference
     */
    public TRoleMenu(String alias) {
        this(DSL.name(alias), T_ROLE_MENU);
    }

    /**
     * Create an aliased <code>security.t_role_menu</code> table reference
     */
    public TRoleMenu(Name alias) {
        this(alias, T_ROLE_MENU);
    }

    /**
     * Create a <code>security.t_role_menu</code> table reference
     */
    public TRoleMenu() {
        this(DSL.name("t_role_menu"), null);
    }

    public <O extends Record> TRoleMenu(Table<O> child, ForeignKey<O, TRoleMenuRecord> key) {
        super(child, key, T_ROLE_MENU);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Security.SECURITY;
    }

    @Override
    public Identity<TRoleMenuRecord, Long> getIdentity() {
        return (Identity<TRoleMenuRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<TRoleMenuRecord> getPrimaryKey() {
        return Keys.KEY_T_ROLE_MENU_PRIMARY;
    }

    @Override
    public TRoleMenu as(String alias) {
        return new TRoleMenu(DSL.name(alias), this);
    }

    @Override
    public TRoleMenu as(Name alias) {
        return new TRoleMenu(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TRoleMenu rename(String name) {
        return new TRoleMenu(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TRoleMenu rename(Name name) {
        return new TRoleMenu(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
